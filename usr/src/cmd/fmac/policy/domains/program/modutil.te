#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Original files contributed to OpenSolaris.org under license by the
# United States Government (NSA) to Sun Microsystems, Inc.
#

#################################
#
# Rules for the module utility domains.
#
type modules_dep_t, file_type;
type modules_conf_t, file_type, sysadmfile;
type modules_object_t, file_type, sysadmfile;


#################################
#
# Rules for the modprobe_t domain.
#
type modprobe_t, domain, privlog;
type modprobe_exec_t, file_type, exec_type, sysadmfile;

# Inherit and use descriptors from init.
allow modprobe_t init_t:fd inherit_fd_perms;

# Use a pipe created by initrc_t.
allow modprobe_t initrc_t:pipe rw_file_perms;

# Run insmod in its own domain.
domain_auto_trans(modprobe_t, insmod_exec_t, insmod_t)

# Read conf.modules.
allow modprobe_t modules_conf_t:file r_file_perms;

# Run shell commands from conf.modules.
can_exec_any(modprobe_t)

# Read modules.dep.
allow modprobe_t modules_dep_t:file r_file_perms;


#################################
#
# Rules for the depmod_t domain.
#
type depmod_t, domain;
type depmod_exec_t, file_type, exec_type, sysadmfile;

# Inherit and use descriptors from init.
allow depmod_t init_t:fd inherit_fd_perms;

# Use a pipe created by initrc_t.
allow depmod_t initrc_t:pipe rw_file_perms;

# Read conf.modules.
allow depmod_t modules_conf_t:file r_file_perms;

# Create modules.dep.
file_type_auto_trans(depmod_t, modules_object_t, modules_dep_t)

# Read module objects.
allow depmod_t modules_object_t:dir r_dir_perms;
allow depmod_t modules_object_t:file r_file_perms;


#################################
#
# Rules for the insmod_t domain.
#
type insmod_t, domain;
type insmod_exec_t, file_type, exec_type, sysadmfile;

# Use the sys_module capability.
allow insmod_t self:capability { sys_module };

# Inherit and use descriptors from init.
allow insmod_t init_t:fd inherit_fd_perms;

# Use a pipe created by initrc_t.
allow insmod_t initrc_t:pipe rw_file_perms;

# Read module objects.
allow insmod_t modules_object_t:dir r_dir_perms;
allow insmod_t modules_object_t:file r_file_perms;


#################################
#
# Rules for the rmmod_t domain.
#
type rmmod_t, domain;
type rmmod_exec_t, file_type, exec_type, sysadmfile;

# Use the sys_module and setpcap capabilities.
allow rmmod_t self:capability { sys_module };

# Inherit and use descriptors from init.
allow rmmod_t init_t:fd inherit_fd_perms;

# Use a pipe created by initrc_t.
allow rmmod_t initrc_t:pipe rw_file_perms;

