#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Original files contributed to OpenSolaris.org under license by the
# United States Government (NSA) to Sun Microsystems, Inc.
#

#################################
#
# Rules for the lpd_t domain.
#
# lpd_t is the domain of lpd.
# lpd_exec_t is the type of the lpd executable.
# printer_t is the type of the Unix domain socket created
# by lpd. 
#
type lpd_t, domain, privlog;
type lpd_exec_t, file_type, sysadmfile, exec_type;
type printer_t, file_type, sysadmfile;

type lpd_tmp_t, file_type, sysadmfile, tmpfile;
file_type_auto_trans(lpd_t, tmp_t, lpd_tmp_t)

# Use capabilities.
allow lpd_t lpd_t:capability { setgid setuid net_bind_service dac_read_search dac_override };

# Inherit and use descriptors from init.
allow lpd_t init_t:fd inherit_fd_perms;

# Use the network.
can_network(lpd_t)

# Bind to the printer port.
allow lpd_t printer_port_t:tcp_socket name_bind;

# Send to portmap.
can_udp_send(lpd_t, portmap_t)

# Connect to ypbind.
can_tcp_connect(lpd_t, ypbind_t)

# Create and bind to /dev/printer.
file_type_auto_trans(lpd_t, device_t, printer_t)
allow lpd_t printer_t:unix_stream_socket name_bind;
allow lpd_t printer_t:unix_dgram_socket name_bind;

# Write to /var/spool/lpd.
allow lpd_t lpd_spool_t:dir rw_dir_perms;
allow lpd_t lpd_spool_t:file create_file_perms;

# Execute filter scripts.
can_exec(lpd_t, lpd_spool_t)
can_exec_any(lpd_t)
