#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Original files contributed to OpenSolaris.org under license by the
# United States Government (NSA) to Sun Microsystems, Inc.
#

#################################
# 
# Rules for the local_login_t domain
# and the remote_login_t domain.
#

#################################
#
# Rules for the local_login_t domain.
#
# local_login_t is the domain of a login process 
# spawned by getty.
# login_exec_t is the type of the login program
#
type local_login_t, domain, privuser, privrole, privlog, auth, privowner;
type login_exec_t, file_type, sysadmfile, exec_type;

type local_login_tmp_t, file_type, sysadmfile, tmpfile;
file_type_auto_trans(local_login_t, tmp_t, local_login_tmp_t)

# Use capabilities.
allow local_login_t local_login_t:capability { setuid setgid chown fowner fsetid net_bind_service sys_tty_config dac_override };

# Use the network.
can_network(local_login_t)

# Run shells in user_t by default.
domain_auto_trans(local_login_t, shell_exec_t, user_t)

# Allow shells to be created in sysadm_t as well.
domain_trans(local_login_t, shell_exec_t, sysadm_t)

# Do not audit denied attempts to access devices.
auditdeny local_login_t fixed_disk_device_t:blk_file ~{ getattr setattr };
auditdeny local_login_t removable_device_t:blk_file ~{ getattr setattr };
auditdeny local_login_t device_t:file_class_set ~{ getattr setattr };
auditdeny local_login_t misc_device_t:file_class_set ~{ getattr setattr };

# Write to /var/run/utmp.
allow local_login_t initrc_var_run_t:file rw_file_perms;

# Write to /var/log/wtmp.
allow local_login_t wtmp_t:file rw_file_perms;

# Write to /var/log/lastlog.
allow local_login_t var_log_t:file rw_file_perms;

# Create lock file.
allow local_login_t var_lock_t:dir rw_dir_perms;
allow local_login_t var_lock_t:file create_file_perms;

# Read /etc/shadow.
allow local_login_t shadow_t:file r_file_perms;

# Search for mail spool file.
allow local_login_t mail_spool_t:dir r_dir_perms;
allow local_login_t mail_spool_t:file getattr;

# Read and write ttys.
allow local_login_t tty_device_t:chr_file rw_file_perms;

# Relabel ttys.
allow local_login_t tty_device_t:chr_file { relabelfrom relabelto };


#################################
#
# Rules for the remote_login_t domain.
#
# remote_login_t is the domain of a login process 
# spawned by rlogind.
#
type remote_login_t, domain, privuser, privrole, privlog, auth, privowner;

type remote_login_tmp_t, file_type, sysadmfile, tmpfile;
file_type_auto_trans(remote_login_t, tmp_t, remote_login_tmp_t)

# Use capabilities.
allow remote_login_t remote_login_t:capability { setuid setgid chown fowner fsetid net_bind_service sys_tty_config dac_override };

# Use the network.
can_network(remote_login_t)

# Run shells in user_t by default.
domain_auto_trans(remote_login_t, shell_exec_t, user_t)

# Use the pty created by rlogind.
allow remote_login_t rlogind_devpts_t:chr_file rw_file_perms;

# Write to /var/run/utmp.
allow remote_login_t initrc_var_run_t:file rw_file_perms;

# Write to /var/log/wtmp.
allow remote_login_t wtmp_t:file rw_file_perms;

# Write to /var/log/lastlog.
allow remote_login_t var_log_t:file rw_file_perms;

# Read /etc/shadow.
allow remote_login_t shadow_t:file r_file_perms;

# Search for mail spool file.
allow remote_login_t mail_spool_t:dir r_dir_perms;
allow remote_login_t mail_spool_t:file getattr;

# Relabel ptys created by rlogind.
allow remote_login_t rlogind_devpts_t:chr_file { relabelfrom relabelto };
